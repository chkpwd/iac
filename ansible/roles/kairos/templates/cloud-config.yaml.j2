#cloud-config

users:
  - name: chkpwd
    shell: /bin/bash
    groups: ["admin"]
    ssh_authorized_keys: ["github:chkpwd"]

install:
  auto: true
  device: /dev/sda
  reboot: true

  grub_options:
    saved_entry: "Kairos"

  extra-dirs-rootfs: &longhorn ["/var/lib/longhorn"]

upgrade:
  extra-dirs-rootfs: *longhorn

reset:
  extra-dirs-rootfs: *longhorn

growpart:
  devices: ["/"]

stages:
  after-install-chroot:
    - name: "Install Longhorn Prerequisites"
      commands:
        - apt install parted nfs-common open-iscsi

    - name: "Format NVME Drive"
      commands:
        - parted /dev/nvme0n1 --script -a optimal -- mklabel gpt mkpart longhorn ext4 0% 100%
        - mkfs.ext4 -F /dev/nvme0n1p1

    - name: "Add Cilium Helm Chart to K3S AddOns Directory"
      downloads:
        - url: https://raw.githubusercontent.com/chkpwd/kairos/main/multi-node-k3s/manifests/kubevip-values.yaml
          path: /var/lib/rancher/k3s/server/manifests/kubevip.yaml
        - url: https://raw.githubusercontent.com/chkpwd/kairos/main/multi-node-k3s/manifests/cilium-values.yaml
          path: /var/lib/rancher/k3s/server/manifests/cilium-crd.yaml

    - name: "Determine Bootstrap Node"
      files:
        - path: /oem/60_k3s_config.yaml
          permissions: 0666
          content: |
            #cloud-config
            {{- $nodes := list "00:50:56:bc:69:5c" "00:50:56:bc:7a:47" "00:50:56:bc:78:e2" -}}
            {{- $uniqueIDs := list "01" "02" "03" -}}
            {{- $hostname := "localhost" -}}
            {{- $first := false -}}

            {{- range $index, $net := .Values.network -}}
              {{- range $macIndex, $mac := $nodes -}}
                {{- if eq $net.macaddress $mac -}}
                  {{- $hostname = printf "cattle-k3s-%s" (index $uniqueIDs $macIndex) -}}
                  {{- if eq $macIndex 0 -}}
                    {{- $first = true -}}
                  {{- end -}}
                {{- end -}}
              {{- end -}}
            {{- end }}

            hostname: "{{ $hostname }}"

            k3s:
              enabled: true
              env:
                K3S_TOKEN: {[ K3S_INIT_TOKEN ]}
              args:
            {{- if $first }}
                - --cluster-init
            {{- else }}
                - --server https://172.16.16.45:6443
            {{- end }}
                - --tls-san "172.16.16.45"
                - --disable traefik,servicelb,local-storage,metrics-server
                - --flannel-backend none
                - --disable-network-policy
                - --service-cidr 172.24.0.0/16
                - --cluster-cidr 172.23.0.0/16
                - --disable-kube-proxy
                - --write-kubeconfig-mode 0644

  initramfs:
    - name: Increase number of open files
      sysctl:
        fs.inotify.max_user_instances: "8192"
        fs.inotify.max_user_watches: "524288"

    - name: "Mount Longhorn filesystem"
      commands:
        # -- https://github.com/kairos-io/packages/blob/3482fed51f21a2155b60a0aa9ac91b1d839d1029/packages/static/kairos-overlay-files/files/system/oem/00_rootfs_uki.yaml#L43
        - umount /var/lib/longhorn
        - mount -o rw /dev/nvme0n1p1 /var/lib/longhorn

  boot:
    - name: "Define Environment Variables"
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
        CONTAINERD_ADDRESS: /run/k3s/containerd/containerd.sock
        CONTAINERD_NAMESPACE: k8s.io

    - name: "Add flux-system namespace manifest"
      files:
        - path: /var/lib/rancher/k3s/server/manifests/flux-system.yaml
          content: |
            apiVersion: v1
            kind: Namespace
            metadata:
              name: flux-system

    - name: "Add SOPS secret"
      files:
        - path: /var/lib/rancher/k3s/server/manifests/sops-secret.yaml
          content: |
            apiVersion: v1
            kind: Secret
            metadata:
              name: sops-age
              namespace: flux-system
            type: Opaque
            data:
              age.agekey: {[ AGE_KEY_SECRET_BASE64 ]}

    - name: "Set modprobe modules"
      modules:
        - iscsi_tcp
