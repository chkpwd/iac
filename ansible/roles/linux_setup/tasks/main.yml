---
- name: Install essential packages # noqa package-latest
  ansible.builtin.apt:
    name: "{{ linux_setup_packages }}"
    state: latest
  become: true
- name: Ensure a locale exists
  community.general.locale_gen:
    name: en_US.UTF-8
    state: present
- name: Include | logrotate
  ansible.builtin.include_role:
    name: arillso.logrotate
  vars:
    logrotate_global_config: false
    logrotate_applications:
      - name: custom_logging
        definitions:
          - logs:
              - /var/log/syslog.log
              - /var/log/messages
            options:
              - daily
              - size 20M
              - missingok
              - rotate 10
              - compress
              - delaycompress
              - notifempty
              - create 640 root adm
              - sharedscripts
- name: Gather service facts
  ansible.builtin.service_facts:
- name: Register logrotate service status
  set_fact:
    logrotate_status: "{{ \n  ansible_facts['services']['logrotate.service']\n  if 'logrotate.service' in ansible_facts['services']\n  else 'unknown'\n}}\n        #magic___^_^___line"
- name: Check if logrotate service is failed
  ansible.builtin.debug:
    msg: logrotate service has failed
  when: ansible_facts.services['logrotate.service'].state == 'failed'
- name: Apply user configurations for {{ linux_setup_common_user }}
  ansible.builtin.include_tasks: user.yml
- name: Apply secondary disk partitioning
  ansible.builtin.include_tasks: disk.yml
  when: ansible_facts['devices'] | dict2items | selectattr('key', 'contains', 'sd') | length > 1
- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ ansible_ssh_host }}"
- name: Copy the public SSH key
  ansible.posix.authorized_key:
    user: "{{ linux_setup_common_user }}"
    state: present
    key: "{{ linux_setup_ssh_public_key }}"
  become: true
- name: Disable SSH password auth
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: ^#PasswordAuthentication yes
    line: PasswordAuthentication no
  notify: Restart SSH daemon
  become: true
- name: Remove administrator user
  vars:
    ansible_ssh_user: "{{ linux_setup_common_user }}"
  ansible.builtin.user:
    name: administrator
    state: absent
    force: true
  when: ansible_ssh_user == "administrator"
  become: true
