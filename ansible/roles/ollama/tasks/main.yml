---
- name: Check if ollama is installed
  become: true
  ansible.builtin.stat:
    path: "{{ ollama_binary_path }}"
  register: ollama_binary
- name: Downloading and installing ollama
  when: not ollama_binary.stat.exists
  block:
    - name: Downloading release "{{ ollama_ver }}"
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: "{{ ollama_url }}"
        dest: "{{ ollama_tmp_dir }}"
        checksum: "{{ ollama_checksums[ollama_ver] }}"
        mode: "644"
    - name: Create directory to store libs
      become: true
      become_user: root
      ansible.builtin.file:
        path: "{{ ollama_parent_install_dir }}"
        state: directory
        mode: "755"
    - name: Unarchiving Ollama Tar
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: "{{ ollama_tmp_dir }}"
        dest: "{{ ollama_parent_install_dir }}"
        creates: "{{ ollama_binary_path }}"
  always:
    - name: Remove Ollama Files
      become: true
      ansible.builtin.file:
        path: "{{ ollama_tmp_dir }}"
        state: absent
- name: Create ollama group
  ansible.builtin.group:
    name: "{{ ollama_user }}"
- name: Create Ollama User
  ansible.builtin.user:
    name: "{{ ollama_user }}"
    shell: /bin/false
    system: true
    create_home: true
    home: /usr/share/ollama
    state: present
    group: ollama
- name: Create systemd service
  ansible.builtin.template:
    src: templates/ollama.service.j2
    dest: /etc/systemd/system/ollama.service
    owner: "{{ ollama_user }}"
    group: "{{ ollama_user }}"
    mode: "0644"
  notify: Restart Ollama Service
- name: Enable systemd service
  ansible.builtin.systemd_service:
    name: ollama
    state: started
    enabled: true
