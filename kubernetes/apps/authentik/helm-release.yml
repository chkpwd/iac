---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authentik
spec:
  interval: 15m
  chart:
    spec:
      chart: authentik
      version: 2025.2.4
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  driftDetection:
    mode: enabled
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    global:
      podAnnotations:
        secret.reloader.stakater.com/reload: *app
      env:
        - name: AUTHENTIK_OUTPOSTS__DISABLE_EMBEDDED_OUTPOST
          value: "true"
        - name: AUTHENTIK_POSTGRESQL__HOST
          valueFrom:
            secretKeyRef:
              name: authentik-pguser-authentik
              key: host
        - name: AUTHENTIK_POSTGRESQL__NAME
          valueFrom:
            secretKeyRef:
              name: authentik-pguser-authentik
              key: dbname
        - name: AUTHENTIK_POSTGRESQL__USER
          valueFrom:
            secretKeyRef:
              name: authentik-pguser-authentik
              key: user
        - name: AUTHENTIK_POSTGRESQL__PASSWORD
          valueFrom:
            secretKeyRef:
              name: authentik-pguser-authentik
              key: password
        - name: AUTHENTIK_POSTGRESQL__PORT
          valueFrom:
            secretKeyRef:
              name: authentik-pguser-authentik
              key: port
        - name: AUTHENTIK_EMAIL__USERNAME
          valueFrom:
            secretKeyRef:
              name: authentik-config
              key: email_address
        - name: AUTHENTIK_EMAIL__PASSWORD
          valueFrom:
            secretKeyRef:
              name: authentik-config
              key: app_password
        - name: AUTHENTIK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: authentik-config
              key: secret_key
        - name: AUTHENTIK_BOOTSTRAP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: authentik-config
              key: bootstrap_password
        - name: AUTHENTIK_BOOTSTRAP_TOKEN
          valueFrom:
            secretKeyRef:
              name: authentik-config
              key: bootstrap_token
        - name: AUTHENTIK_BOOTSTRAP_EMAIL
          valueFrom:
            secretKeyRef:
              name: authentik-config
              key: bootstrap_email
    server:
      name: server
      replicas: 1
      pdb:
        # -- Deploy a [PodDistrubtionBudget] for the authentik server
        enabled: false
      ingress:
        enabled: true
        ingressClassName: ext-ingress
        labels:
          external-dns/public: "true"
        annotations:
          cert-manager.io/cluster-issuer: main-issuer
        hosts:
          - "authentik.${DOMAIN}"
        paths: ["/"]
        pathType: Prefix
      metrics:
        serviceMonitor:
          enabled: true
      resources:
        requests:
          cpu: 200m
        limits:
          cpu: "2"
    worker:
      replicas: 1
      pdb:
        # -- Deploy a [PodDistrubtionBudget] for the authentik server
        enabled: false
      resources:
        requests:
          cpu: 11m
          memory: 604Mi
        limits:
          memory: 629Mi
    serviceAccount:
      # -- Create service account. Needed for managed outposts
      create: true
    authentik:
      log_level: info
      error_reporting:
        enabled: true
      email:
        from: "authentik <ocid@chkpwd.com>"
        host: smtp.gmail.com
        port: 465
        use_ssl: false
      redis:
        host: "authentik-redis.security.${CLUSTER_DOMAIN}"
    prometheus:
      rules:
        enabled: false
    postgresql:
      enabled: false
    redis:
      enabled: false
