# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.1.1/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
  namespace: tools
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 4.1.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-labs
        namespace: flux-system
  driftDetection:
    mode: enabled
  install:
    remediation:
      retries: -1
  upgrade:
    remediation:
      retries: 3
  values:
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1026
        runAsGroup: &group 100
        fsGroup: *group
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: {type: RuntimeDefault}
    controllers:
      server:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.132.3
              pullPolicy: IfNotPresent
            env: &env
              TZ: America/New_York
              IMMICH_WORKERS_INCLUDE: api
              REDIS_HOSTNAME: "immich-redis.tools.svc.cluster.local"
              REDIS_PORT: "6379"
              DB_DATABASE_NAME:
                valueFrom:
                  secretKeyRef:
                    name: immich-pguser-immich
                    key: dbname
              DB_HOSTNAME:
                valueFrom:
                  secretKeyRef:
                    name: immich-pguser-immich
                    key: host
              DB_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: immich-pguser-immich
                    key: user
              DB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: immich-pguser-immich
                    key: password
              DB_URL:
                valueFrom:
                  secretKeyRef:
                    name: immich-pguser-immich
                    key: uri
              LOG_LEVEL: verbose
              MPLCONFIGDIR: /tmp/matplotlib
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: [ALL]}
        pod:
          terminationGracePeriodSeconds: 1
      microservices:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.132.3
              pullPolicy: IfNotPresent
            env:
              <<: *env
              IMMICH_WORKERS_INCLUDE: null
              IMMICH_WORKERS_EXCLUDE: api
            resources:
              requests:
                gpu.intel.com/i915: 1
              limits:
                gpu.intel.com/i915: 1
            securityContext: *securityContext
        pod:
          terminationGracePeriodSeconds: 1
      machine-learning:
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.135.3
              pullPolicy: IfNotPresent
            securityContext: *securityContext
    service:
      immich:
        controller: immich
        enabled: false
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
      server:
        enabled: true
        controller: server
        ports:
          http:
            port: &serverPort 2283
    route:
      public:
        enabled: true
        kind: HTTPRoute
        hostnames: ["{{ .Release.Name }}.chkpwd.com"]
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: /
            backendRefs:
              - name: immich-server
                port: *serverPort
        parentRefs:
          - name: public
            namespace: kube-system
            sectionName: https
    persistence:
      upload:
        enabled: true
        type: nfs
        server: "nas-srv-01.chkpwd.com"
        path: /volume1/vault-01/static_media/immich
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/upload
          microservices:
            app:
              - path: /usr/src/app/upload
      photography:
        enabled: true
        type: nfs
        server: "nas-srv-01.chkpwd.com"
        path: /volume1/vault-01/static_media/photography
        advancedMounts:
          server:
            app:
              - path: /usr/src/app/photography
          microservices:
            app:
              - path: /usr/src/app/photography
      model-cache:
        enabled: true
        storageClass: ceph-block
        accessMode: ReadWriteOnce
        size: 8Gi
        retain: true
        advancedMounts:
          machine-learning:
            app:
              - path: /cache
      tmp:
        enabled: true
        type: emptyDir
