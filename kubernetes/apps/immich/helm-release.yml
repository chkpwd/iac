---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
  namespace: tools
spec:
  interval: 15m
  chart:
    spec:
      chart: immich
      version: 0.9.2
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: immich
        namespace: flux-system
  driftDetection:
    mode: enabled
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    controller:
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      tag: v1.124.2
    postgres:
      enabled: false
    redis:
      enabled: false
    immich:
      persistence:
        library:
          existingClaim: immich-nfs-uploads
      configuration:
        # ffmpeg:
        #   accel: qsv
        #   accelDecode: false
        #   cqMode: icq
        #   preferredHwDevice: auto
        #   temporalAQ: false
        image:
          colorspace: p3
          extractEmbedded: false
          preview:
            format: jpeg
          thumbnail:
            format: webp
        backup:
          database:
            enabled: true
            cronExpression: 0 02 * * *
            keepLastAmount: 5
        # oauth:
        #   autoLaunch: false
        #   autoRegister: true
        #   buttonText: Login with Authentik
        #   enabled: true
        #   issuerUrl: https://authentik.chkpwd.com/application/o/immich/
        passwordLogin:
          enabled: true
        newVersionCheck:
          enabled: false
        trash:
          enabled: true
          days: 30
        library:
          scan:
            enabled: true
            cronExpression: 0 0 * * *
          watch:
            enabled: true
        logging:
          enabled: true
          level: log
        machineLearning:
          enabled: true
          duplicateDetection:
            enabled: true
        metadata:
          faces:
            import: true
        notifications:
          smtp:
            enabled: false
        server:
          externalDomain: ""
          loginPageMessage: ""
        storageTemplate:
          enabled: true
          hashVerificationEnabled: true
          template: "{{y}}/{{y}}-{{MM}}-{{dd}}/{{filename}}"
        templates:
          email:
            albumInviteTemplate: ""
            albumUpdateTemplate: ""
            welcomeTemplate: ""
        theme:
          customCss: ""
        user:
          deleteDelay: 7
    env:
      TZ: "${TZ}"
      # IMMICH_MEDIA_LOCATION: /usr/src/app/upload
      REDIS_HOSTNAME: "immich-redis.tools.${CLUSTER_DOMAIN}"
      REDIS_PORT: "6379"
      DB_DATABASE_NAME:
        valueFrom:
          secretKeyRef:
            name: immich-pguser-immich
            key: dbname
      DB_HOSTNAME:
        valueFrom:
          secretKeyRef:
            name: immich-pguser-immich
            key: host
      DB_USERNAME:
        valueFrom:
          secretKeyRef:
            name: immich-pguser-immich
            key: user
      DB_PASSWORD:
        valueFrom:
          secretKeyRef:
            name: immich-pguser-immich
            key: password
      DB_URL:
        valueFrom:
          secretKeyRef:
            name: immich-pguser-immich
            key: uri
      LOG_LEVEL: verbose
    server:
      enabled: true
      ingress:
        main:
          enabled: true
          ingressClassName: ext-ingress
          annotations:
            external-dns.alpha.kubernetes.io/target: ${DOMAIN}
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
          hosts:
            - host: "{{ .Release.Name }}.${DOMAIN}"
              paths:
                - path: /
                  pathType: Prefix
      securityContext:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
        capabilities:
          drop: ["ALL"]
      persistence:
        images:
          enabled: true
          mountPath: /mnt/images
          existingClaim: immich-nfs-images
      resources:
        requests:
          cpu: 10m
          memory: 128Mi
        limits:
          cpu: 4000m
          memory: 3Gi
    machine-learning:
      # nodeSelector:
      #   intel.feature.node.kubernetes.io/gpu: "true"
      resources:
        requests:
          # gpu.intel.com/i915: 1
          cpu: 500m
          memory: 4096M
        limits:
          # gpu.intel.com/i915: 1
          cpu: 1
          memory: 6Gi
      persistence:
        cache:
          type: pvc
          existingClaim: immich-machine-learning-cache
      probes:
        liveness:
          spec:
            initialDelaySeconds: 120
        readiness:
          spec:
            initialDelaySeconds: 120
