---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.1.0/charts/library/common/values.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyfin
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.3.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3

  values:
    global:
      fullNameOverride: *app

    defaultPodOptions:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 80
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - plex
                        - sabnzbd
                topologyKey: "kubernetes.io/hostname"

    controllers:
      jellyfin:
        enabled: true
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"

        replicas: 1

        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 15Gi
              storageClass: longhorn-media
              globalMounts:
                - path: /config

        pod:
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 1026
            runAsGroup: &group 100
            fsGroup: *group
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          app:
            image:
              repository: jellyfin/jellyfin
              tag: 10.8.13-1
              pullPolicy: IfNotPresent
            env:
              TZ: "${TZ}"
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              JELLYFIN_FFmpeg__probesize: 50000000
              JELLYFIN_FFmpeg__analyzeduration: 50000000
              JELLYFIN_PublishedServerUrl: &loadBalancerIP ${JELLYFIN_LB_ADDRESS}

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 100m
                memory: 512Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 4Gi

    service:
      app:
        controller: jellyfin
        annotations:
          io.cilium/lb-ipam-ips: *loadBalancerIP
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: *port

    ingress:
      internal:
        className: int-ingress
        annotations:
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.security.${CLUSTER_DOMAIN}:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: /outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
          external-dns.alpha.kubernetes.io/target: ${LOCAL_DOMAIN}
        hosts:
          - host: &host "{{ .Release.Name }}.${LOCAL_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http

    persistence:
      data:
        enabled: true
        type: nfs
        server: "nas-srv-01.${LOCAL_DOMAIN}"
        path: /volume1/vault-01/media
      transcode:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /transcode
      cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /cache
