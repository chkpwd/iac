---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app radarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3

  values:
    global:
      fullnameOverride: *app

    controllers:
      main:
        enabled: true
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1

        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 2Gi
              storageClass: longhorn-media
              globalMounts:
                - path: /config

        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 1026
            runAsGroup: &group 100
            fsGroup: *group
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/radarr-develop
              tag: 5.3.2.8504
              pullPolicy: IfNotPresent
            env:
              TZ: "${TZ}"
              RADARR__INSTANCE_NAME: *app
              RADARR__PORT: &port 7878
              RADARR__APPLICATION_URL: "https://{{ .Release.Name }}.${K8S_GATEWAY_DOMAIN}"
              RADARR__API_KEY: ${API_KEY_RADARR}
              RADARR__AUTHENTICATION_METHOD: External
              RADARR__THEME: dark
              RADARR__LOG_LEVEL: info

            probes:
              liveness:
                enabled: false

            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL

            resources:
              requests:
                cpu: 14m
                memory: 186Mi
              limits:
                memory: 211Mi

          secondary:
            image:
              repository: ghcr.io/onedr0p/exportarr
              tag: v1.6.1
            env:
              PORT: &metricsPort 9707
              URL: "http://{{ .Release.Name }}.{{ .Release.Namespace }}.${CLUSTER_DOMAIN}:7878"
              APIKEY: ${API_KEY_RADARR}
            args: ["radarr"]

            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 125Mi

    service:
      main:
        primary: true
        ports:
          http:
            port: *port
      secondary:
        nameOverride: metrics
        controller: main
        ports:
          metrics:
            port: *metricsPort

    ingress:
      main:
        enabled: true
        className: int-ingress
        annotations:
          nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-authentik-embedded-outpost.security.${CLUSTER_DOMAIN}:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: /outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: &host "{{ .Release.Name }}.${K8S_GATEWAY_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
              - path: /metrics
                pathType: Prefix
                service:
                  name: secondary
                  port: metrics
        tls:
          - hosts:
              - *host

    persistence:
      data:
        enabled: true
        type: nfs
        server: "nas-srv-01.${LOCAL_DOMAIN}"
        path: /volume1/vault-01/media
