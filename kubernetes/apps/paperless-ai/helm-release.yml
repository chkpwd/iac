---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless-ai
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 4.1.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-labs
        namespace: flux-system
  driftDetection:
    mode: enabled
  install:
    remediation:
      retries: -1
  upgrade:
    remediation:
      retries: 3
  values:
    global:
      fullnameOverride: paperless-ai
    controllers:
      paperless-ai:
        enabled: true
        type: statefulset
        replicas: 1
        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: "${VOLSYNC_CAPACITY}"
              storageClass: ceph-block
              dataSourceRef:
                kind: ReplicationDestination
                apiGroup: volsync.backube
                name: "${APP}"
              globalMounts:
                - path: /app/data
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: &context 1999
            runAsGroup: *context
            fsGroup: *context
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          app:
            image:
              repository: docker.io/clusterzx/paperless-ai
              tag: 3.0.4
            env:
              PAPERLESS_HOST: paperless-ai
              PAPERLESS_API_URL: http://paperless-ngx.tools.svc.cluster.local:8000/api
              AI_PROVIDER: ollama
              SCAN_INTERVAL: "*/31 * * * *"
              PROCESS_PREDEFINED_DOCUMENTS: yes
              ADD_AI_PROCESSED_TAG: no
              AI_PROCESSED_TAG_NAME: paperless-ai
              USE_PROMPT_TAGS: no
              OLLAMA_API_URL: https://ollama.chkpwd.com
              OLLAMA_MODEL: llama3.2:3b
              SYSTEM_PROMPT: |
                "You are a personalized document analyzer. Your task is to analyze documents and extract relevant information.\n\nAnalyze the document content and extract the following information into a structured JSON object:\n\n1. title: Create a concise, meaningful title for the document\n2. correspondent: Identify the sender/institution but do not include addresses\n3. tags: Select up to 4 relevant thematic tags\n4. document_date: Extract the document date (format: YYYY-MM-DD)\n5. language: Determine the document language (e.g. "de" or "en")\n      \nImportant rules for the analysis:\n\nFor tags:\n- FIRST check the existing tags before suggesting new ones\n- Use only relevant categories\n- Maximum 4 tags per document, less if sufficient (at least 1)\n- Avoid generic or too specific tags\n- Use only the most important information for tag creation\n- The output language is the one used in the document! IMPORTANT!\n\nFor the title:\n- Short and concise, NO ADDRESSES\n- Contains the most important identification features\n- For invoices/orders, mention invoice/order number if available\n- The output language is the one used in the document! IMPORTANT!\n\nFor the correspondent:\n- Identify the sender or institution\n  When generating the correspondent, always create the shortest possible form of the company name (e.g. "Amazon" instead of "Amazon EU SARL, German branch")\n\nFor the document date:\n- Extract the date of the document\n- Use the format YYYY-MM-DD\n- If multiple dates are present, use the most relevant one\n\nFor the language:\n- Determine the document language\n- Use language codes like "de" for German or "en" for English\n- If the language is not clear, use "und" as a placeholder"
            envFrom:
              - secretRef:
                  name: paperless-ai
            resources:
              requests:
                cpu: 500m
                memory: 512Mi
              limits:
                cpu: 700m
                memory: 2Gi
    service:
      app:
        controller: paperless-ai
        ports:
          http:
            port: 3000
    ingress:
      external:
        enabled: true
        className: int-ingress
        hosts:
          - host: "{{ .Release.Name }}.chkpwd.com"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
    persistence:
      logs:
        type: emptyDir
        globalMounts:
          - path: /app/logs
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
      pm2:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /.pm2
      nltk_data:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /nltk_data
