---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app rss-hub
spec:
  interval: 15m
  chart:
    spec:
      chart: rsshub
      version: 0.2.9
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: nsl
        namespace: flux-system

  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3

  values:
    fullnameOverride: *app

    replicaCount: 2

    image:
      repository: ghcr.io/diygod/rsshub
      pullPolicy: IfNotPresent
      tag: "2024-04-11"

    env:
      # More information in https://docs.rsshub.app/install/config
      NODE_ENV: production
      # cache type redis/memory
      CACHE_TYPE: redis
      CACHE_EXPIRE: '300'
      CACHE_CONTENT_EXPIRE: '3600'

    envFrom: []

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    service:
      type: ClusterIP
      port: 80

    ingress:
      enabled: true
      className: ext-ingress
      annotations:
        external-dns.alpha.kubernetes.io/target: ${EXTERNAL_DOMAIN}
      hosts:
        - host: &host "{{ .Release.Name }}.${EXTERNAL_DOMAIN}"
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
          - *host


    resources:
      requests:
        cpu: 10m
        memory: 128Mi
      limits:
        memory: 128Mi

    redis:
      enabled: true
      name: redis

      image:
        repository: redis
        tag: 7.0.7-alpine
        imagePullPolicy: IfNotPresent

      containerPort: 6379
      # -- Redis service port
      servicePort: 6379

      networkPolicy:
        # -- Create NetworkPolicy objects for all components
        create: false
        # -- Default deny all ingress traffic
        defaultDenyIngress: false

      # -- Redis pod-level security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 999

      # -- Resource limits and requests for redis
      resources:
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          memory: 128Mi

    puppeteer:
      enabled: true

      name: puppeteer

      replicaCount: 2

      image:
        repository: browserless/chrome
        tag: 1.60.2-puppeteer-21.3.6
        pullPolicy: IfNotPresent
      # -- Puppeteer container port
      containerPort: 3000
      servicePort: 3000

      securityContext:
        runAsNonRoot: true
        runAsUser: 999

      resources:
        requests:
          cpu: 100m
          memory: 64Mi
        limits:
          memory: 128Mi
