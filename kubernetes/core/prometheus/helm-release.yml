---
#.yml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prometheus
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 75.12.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
  driftDetection:
    mode: disabled
  install:
    remediation:
      retries: -1
  upgrade:
    remediation:
      retries: 3
  values:
    crds:
      enabled: false
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      enabled: false
    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Drop high cardinality labels
          - action: labeldrop
            regex: (uid)
          - action: labeldrop
            regex: (id|name)
          - action: drop
            sourceLabels: ["__name__"]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
    kubeProxy:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeStateMetrics:
      enabled: true
    nodeExporter:
      enabled: true
    grafana:
      enabled: false
      forceDeployDashboards: true
      operator:
        dashboardsConfigMapRefEnabled: true
        matchLabels:
          dashboards: "external-grafana"
        resyncPeriod: 10m
        folder: Kubernetes
      sidecar:
        dashboards:
          annotations:
            grafana_folder: Kubernetes
    prometheusOperator:
      resources:
        requests:
          cpu: 35m
          memory: 273M
        limits:
          memory: 326M
      prometheusConfigReloader:
        # resource config for prometheusConfigReloader
        resources:
          requests:
            cpu: 5m
            memory: 32M
          limits:
            memory: 32M
    prometheus:
      route:
        main:
          enabled: true
          hostnames: ["k8s-{{ .Release.Name }}.chkpwd.com"]
          parentRefs:
            - name: private
              namespace: kube-system
              sectionName: https
      prometheusSpec:
        image:
          registry: docker.io
          repository: prompp/prompp
          tag: 2.53.2-0.2.5
        securityContext:
          runAsNonRoot: true
          runAsUser: 64535
          runAsGroup: 64535
          fsGroup: 64535
        enableAdminAPI: true
        enableFeatures:
          - auto-gomaxprocs
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        replicas: 1
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 2000M
        retention: 14d
        retentionSize: 8GB
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 10Gi
        walCompression: true
    thanosRuler:
      enabled: false
