---
apiVersion: v1
kind: Namespace
metadata:
  name: silly-app
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.32.2-standalone-strict/service-v1.json
apiVersion: v1
kind: Service
metadata:
  name: silly-app
  namespace: silly-app
spec:
  type: ClusterIP
  selector:
    app: silly-app
  ports:
    - name: http
      port: &port 8000
      protocol: TCP
      targetPort: *port
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.32.2-standalone-strict/ingress-networking-v1.json
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: &app silly-app
  namespace: silly-app
  labels:
    external-dns/public: "true"
  annotations:
    external-dns.alpha.kubernetes.io/target: "chkpwd.com"
spec:
  ingressClassName: ext-ingress
  rules:
    - host: silly-app.chkpwd.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: *app
                port:
                  number: 8000
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: silly-app
  namespace: silly-app
  labels:
    kasten-k10-backup: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: silly-app
  template:
    metadata:
      labels:
        app: silly-app
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: silly-app
          image: ghcr.io/chkpwd/silly-app:v0.3.2
          ports:
            - name: http
              containerPort: 8000
          volumeMounts:
            - name: data
              mountPath: /app/images
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: 5Gi
